{"version":3,"sources":["components/auth/Home.js","actions/types.js","actions/auth.js","components/auth/Login.js","components/auth/Signup.js","components/auth/Activate.js","components/auth/ResetPassword.js","components/auth/ResetPasswordConfirm.js","components/auth/Facebook.js","components/mat-ui/RouteDG.js","components/AddRoute.js","components/AllRoutes.js","components/auth/Google.js","components/Calendar.js","reducers/auth.js","reducers/index.js","store.js","components/Navi.js","hocs/Layout.js","App.js","index.js"],"names":["connect","state","isAuthenticated","auth","className","class","to","role","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","GOOGLE_AUTH_SUCCESS","GOOGLE_AUTH_FAIL","FACEBOOK_AUTH_SUCCESS","FACEBOOK_AUTH_FAIL","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","res","type","payload","data","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","signup","first_name","last_name","re_password","accountCreated","setAccountCreated","console","log","verify","uid","token","match","verified","setVerified","style","marginTop","onClick","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","facebookAuthenticate","code","details","formBody","Object","keys","map","key","encodeURIComponent","join","location","useLocation","useEffect","values","queryString","parse","search","RouteDG","rows","height","width","columns","field","headerName","description","sortable","editable","pageSize","checkboxSelection","disableSelectionOnClick","AddRoute","routeDesc","setRouteDesc","grade","setGrade","attempts","setAttempts","timing","setTiming","climbType","useForm","register","handleSubmit","document","getElementById","reset","postRoute","then","catch","err","id","method","Button","AllRoutes","setRows","show","setShow","getRoutes","googleAuthenticate","events","color","from","title","Cal","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","redirect","setRedirect","logout_user","href","checkAuthenticated","children","App","exact","path","component","Home","Login","Signup","Google","Facebook","ResetPassword","ResetPasswordConfirm","Activate","Calendar","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5530918a.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Home = ({ isAuthenticated }) => {\n\n    return (    \n    <div className='container'>\n        <div class='jumbotron mt-5'>\n            <h1 class='display-4'>Welcome to Climb D. Jango!</h1>\n            <p class='lead'>A place where you can discover your climbing potential!</p>\n            <hr class='my-4' />\n            <div>\n                { isAuthenticated ?\n                    <Fragment>\n                        <div>\n                            Show Tracker Page\n                        </div>\n                        <div>\n                            Show Calendar Page\n                        </div>\n                    </Fragment>\n                    : \n                    <Fragment>\n                        <p>Click the Log In button</p>\n                        <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\n                    </Fragment>\n                }\n            </div>\n        </div>\n    </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Home);","// Just predefining some variables for testing in reducers.\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\nexport const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\nexport const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\nexport const LOGOUT = 'LOGOUT';","// this files checks for authentication of user.\nimport axios from 'axios';\n// grabbing all these specified cases for tests in reducers.\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    FACEBOOK_AUTH_SUCCESS,\n    FACEBOOK_AUTH_FAIL,\n    LOGOUT\n} from './types';\n\n// this code runs to get user data from db. user? ...Success : ...Fail\n// dispatch is the info that's given to the store so that all components may have access to what's inside.\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        }; \n\n        try {\n            const res = await axios.get(`http://localhost:8000/auth/users/me/`, config);\n    \n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\n\n// This one is google authentication. Quite hack. I don't know much. But will watch video when I have time.\nexport const googleAuthenticate = (state, code) => async dispatch => {\n    if (state && code && !localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        };\n\n        const details = {\n            'state': state,\n            'code': code\n        };\n\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n\n        try {\n            const res = await axios.post(`http://localhost:8000/auth/o/google-oauth2/?${formBody}`, config);\n\n            dispatch({\n                type: GOOGLE_AUTH_SUCCESS,\n                payload: res.data\n            });\n\n            dispatch(load_user());\n        } catch (err) {\n            dispatch({\n                type: GOOGLE_AUTH_FAIL\n            });\n        }\n    }\n};\n\n\n//Same same as google reason. Will watch video when I have time. Good to have though.\nexport const facebookAuthenticate = (state, code) => async dispatch => {\n    if (state && code && !localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        };\n\n        const details = {\n            'state': state,\n            'code': code\n        };\n\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n\n        try {\n            const res = await axios.post(`http://localhost:8000/auth/o/facebook/?${formBody}`, config);\n\n            dispatch({\n                type: FACEBOOK_AUTH_SUCCESS,\n                payload: res.data\n            });\n\n            dispatch(load_user());\n        } catch (err) {\n            dispatch({\n                type: FACEBOOK_AUTH_FAIL\n            });\n        }\n    }\n};\n\n// This goes to db to check for user data. If email and password matches a user.\nexport const checkAuthenticated = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }; \n\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\n\n        try {\n            const res = await axios.post(`http://localhost:8000/auth/jwt/verify/`, body, config)\n\n            if (res.data.code !== 'token_not_valid') {\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }\n\n    } else {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }\n};\n\n\n// function name speaks for itself. \nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`http://localhost:8000/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n};\n\n//function name speaks for itself.\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\n\n    try {\n        const res = await axios.post(`http://localhost:8000/auth/users/`, body, config);\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL\n        })\n    }\n};\n\n// function name speaks for itself.\nexport const verify = (uid, token) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token });\n\n    try {\n        await axios.post(`http://localhost:8000/auth/users/activation/`, body, config);\n\n        dispatch({\n            type: ACTIVATION_SUCCESS,\n        });\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        })\n    }\n};\n\n\n// function name speaks for itself.\nexport const reset_password = (email) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email });\n\n    try {\n        await axios.post(`http://localhost:8000/auth/users/reset_password/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_FAIL\n        });\n    }\n};\n\n// function name speaks for itself.\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n        await axios.post(`http://localhost:8000/auth/users/reset_password_confirm/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    });\n};","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '' \n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(email, password);\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign In</h1>\n            <p>Sign into your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Login</button>\n            </form>\n            {/**\n            \n                <button className='btn btn-danger mt-3' onClick={continueWithGoogle}>\n                    Continue With Google\n                </button>\n                <br />\n                <button className='btn btn-primary mt-3' onClick={continueWithFacebook}>\n                    Continue With Facebook\n                </button>\n            */}\n            <p className='mt-3'>\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\n            </p>\n            <p className='mt-3'>\n                Forgot your Password? <Link to='/reset-password'>Reset Password</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n\n// this one is for google and facebook signin. pretty mad.\n// const continueWithGoogle = async () => {\n//     try {\n//         const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n\n//         window.location.replace(res.data.authorization_url);\n//     } catch (err) {\n\n//     }\n// };\n\n// const continueWithFacebook = async () => {\n//     try {\n//         const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?redirect_uri=${process.env.REACT_APP_API_URL}/facebook`)\n\n//         window.location.replace(res.data.authorization_url);\n//     } catch (err) {\n\n//     }\n// };","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../../actions/auth';\nimport axios from 'axios';\n\nconst Signup = ({ signup, isAuthenticated }) => {\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        re_password: '' // this is the confirm password key as stated by djoser\n    });\n\n    const { first_name, last_name, email, password, re_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        \n        if (password === re_password) {\n            signup(first_name, last_name, email, password, re_password);\n            setAccountCreated(true);\n            console.log('User created')\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n    if (accountCreated) {\n        return <Redirect to='/login' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign Up</h1>\n            <p>Create your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='First Name*'\n                        name='first_name'\n                        value={first_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='Last Name*'\n                        name='last_name'\n                        value={last_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email*'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm Password*'\n                        name='re_password'\n                        value={re_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Register</button>\n            </form>\n            {/**\n                <button className='btn btn-danger mt-3' onClick={continueWithGoogle}>\n                    Continue With Google\n                </button>\n                <br />\n                <button className='btn btn-primary mt-3' onClick={continueWithFacebook}>\n                    Continue With Facebook\n                </button>\n            \n            */}\n            <p className='mt-3'>\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n\n    // const continueWithGoogle = async () => {\n    //     try {\n    //         const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n\n    //         window.location.replace(res.data.authorization_url);\n    //     } catch (err) {\n    //         console.log(err)\n    //     }\n    // };\n\n    // const continueWithFacebook = async () => {\n    //     try {\n    //         const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?redirect_uri=${process.env.REACT_APP_API_URL}/facebook`)\n\n    //         window.location.replace(res.data.authorization_url);\n    //     } catch (err) {\n    //         console.log(err)\n    //     }\n    // };","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../../actions/auth';\n\nconst Activate = ({ verify, match }) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = e => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        verify(uid, token);\n        setVerified(true);\n    };\n\n    if (verified) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container'>\n            <div \n                className='d-flex flex-column justify-content-center align-items-center'\n                style={{ marginTop: '200px' }}\n            >\n                <h1>Verify your Account:</h1>\n                <button\n                    onClick={verify_account}\n                    style={{ marginTop: '50px' }}\n                    type='button'\n                    className='btn btn-primary'\n                >\n                    Verify\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../../actions/auth';\n\nconst ResetPassword = ({ reset_password }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Request Password Reset:</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../../actions/auth';\n\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    const { new_password, re_new_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        reset_password_confirm(uid, token, new_password, re_new_password);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <form onSubmit={e => onSubmit(e)}>\n            <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='New Password'\n                        name='new_password'\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm New Password'\n                        name='re_new_password'\n                        value={re_new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import React, { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { facebookAuthenticate } from '../../actions/auth';\nimport queryString from 'query-string';\n\nconst Facebook = ({ facebookAuthenticate }) => {\n    let location = useLocation();\n\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const state = values.state ? values.state : null;\n        const code = values.code ? values.code : null;\n\n        console.log('State: ' + state);\n        console.log('Code: ' + code);\n\n        if (state && code) {\n            facebookAuthenticate(state, code);\n        }\n    }, [location]);\n\n    return (\n        <div className='container'>\n            <div class='jumbotron mt-5'>\n                <h1 class='display-4'>Welcome to Auth System!</h1>\n                <p class='lead'>This is an incredible authentication system with production level features!</p>\n                <hr class='my-4' />\n                <p>Click the Log In button</p>\n                <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { facebookAuthenticate })(Facebook);","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nexport default function RouteDG({rows}) {\n\n    console.log(rows)\n\n    const columns = [\n        // { field: 'id', headerName: 'ID', width: 50 },\n        {\n            field: 'route_desc',\n            headerName: 'Description',\n            description: 'This column has a value getter and is not sortable.',\n            sortable: false,\n            width: 160,\n            editable: true,\n        },\n        {\n          field: 'grade',\n          headerName: 'Grade',\n          width: 120,\n          editable: true,\n        },\n        {\n          field: 'attempts',\n          headerName: 'Attempt',\n          width: 130,\n          editable: true,\n        },\n        {\n          field: 'timing',\n          headerName: 'Timing',\n          type: 'number',\n          width: 120,\n          editable: true,\n        },\n        {\n          field: 'data_attempted',\n          headerName: 'Date of Attempt',\n          type: 'number',\n          width: 250,\n          editable: true,\n        },\n        \n      ];\n      \n  return (\n    <div style={{ height: 400, width: '100%' }}>\n        <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        checkboxSelection\n        disableSelectionOnClick\n        />\n    </div>\n  );\n}\n\n","import React, {useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\n\n\nfunction AddRoute() {\n    // const [routes, setRoutes] = useState([]);\n    const [routeDesc, setRouteDesc] = useState('');\n    const [grade, setGrade] = useState('');\n    const [attempts, setAttempts] = useState(0);\n    const [timing, setTiming] = useState(0.0);\n    const [climbType, setClimbType] = useState(\"BD\")\n    const {register, handleSubmit} = useForm();\n\n    const onSubmit = async data =>{\n        await setRouteDesc(data.routeDesc);\n        await setGrade(data.grade);\n        await setAttempts(data.attempts);\n        await setTiming(data.timing);\n        document.getElementById(\"routeForm\").reset()\n\n        let postRoute = async () =>{\n            await axios.post(`http://localhost:8000/api/route/`, {\n                \"route_desc\" : routeDesc,\n                \"grade\" : grade,\n                \"attempts\" : attempts,\n                \"timing\" : timing,\n                'climb_type': climbType\n            }).then(res=>{\n                console.log(\"success\",res)\n            }).catch(err=>{\n                console.log(err)\n            })\n        }\n        await postRoute()\n    }\n\n    return (\n        <div>\n            <form id=\"routeForm\" className=\"container\" method=\"post\" onSubmit={\n                handleSubmit(onSubmit)} >\n                <input className=\"row mx-1 my-1\" type=\"text\" placeholder=\"name/colour\" {...register(\"routeDesc\")} />\n                <input className=\"row mx-1 my-1\" type=\"text\" placeholder=\"grade(bars)\"{...register(\"grade\")} />\n                <input className=\"row mx-1 my-1\" type=\"number\" placeholder=\"attempt(s)\" {...register(\"attempts\")} />\n                <input className=\"row mx-1 my-1\" type=\"float\" placeholder=\"timing\" {...register(\"timing\")} />\n                <select {...register(\"climb_type\")}>\n                    <option value=\"BD\">Boulder</option>\n                    <option value=\"TR\">Top Rope</option>\n                    <option value=\"LD\">Lead</option>\n                    <option value=\"SP\">Speed</option>\n                </select>\n                <Button type=\"submit\" className=\"row mx-1 my-1 btn btn-dark\">Submit</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddRoute\n","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport RouteDG from './mat-ui/RouteDG';\nimport { Button } from 'react-bootstrap';\nimport AddRoute from './AddRoute';\n\n\n\nfunction AllRoutes() {\n    const [rows, setRows] = useState([]);\n    const [show, setShow] = useState(false);\n\n    const toggleform = () => setShow(!show);\n\n    useEffect(() => {\n        let getRoutes = async () =>{\n            await axios.get(`http://localhost:8000/api/route/`).then(res=>{\n                setRows(res.data);\n                \n            }).catch(err=>{\n                console.log(\"error for getting Routes\", err);\n            })\n        }\n        getRoutes();\n    }, []);\n\n    return (\n        <div>\n            <div className=\"container\" style={{\"width\": \"100%\"}}>\n                <RouteDG rows={rows} />\n            </div>\n\n            <div className=\"container\">\n                <Button className=\"btn btn-dark\" onClick={toggleform}>Add Route</Button>\n                {show?\n                    <>\n                      <AddRoute />  \n                    </>\n                    : <></>\n                }\n            </div>\n\n        </div>\n    );\n};\n\nexport default AllRoutes\n\n","import React, { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { googleAuthenticate } from '../../actions/auth';\nimport queryString from 'query-string';\n\nconst Google = ({ googleAuthenticate }) => {\n    let location = useLocation();\n\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const state = values.state ? values.state : null;\n        const code = values.code ? values.code : null;\n\n        console.log('State: ' + state);\n        console.log('Code: ' + code);\n\n        if (state && code) {\n            googleAuthenticate(state, code);\n        }\n    }, [location]);\n\n    return (\n        <div className='container'>\n            <div class='jumbotron mt-5'>\n                <h1 class='display-4'>Welcome to Auth System!</h1>\n                <p class='lead'>This is an incredible authentication system with production level features!</p>\n                <hr class='my-4' />\n                <p>Click the Log In button</p>\n                <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { googleAuthenticate })(Google);","import React from 'react'\nimport Calendar from 'react-awesome-calendar';\n\nconst events = [{\n    id: 1,\n    color: '#fd3153',\n    from: '2021-07-10T18:00:00+00:00',\n    to: '2021-07-11T19:00:00+00:00',\n    title: 'This is an event'\n}, {\n    id: 2,\n    color: '#1ccb9e',\n    from: '2019-05-01T13:00:00+00:00',\n    to: '2019-05-05T14:00:00+00:00',\n    title: 'This is another event'\n}, {\n    id: 3,\n    color: '#3694DF',\n    from: '2019-05-05T13:00:00+00:00',\n    to: '2019-05-05T20:00:00+00:00',\n    title: 'This is also another event'\n}];\n\n\nfunction Cal() {\n    return (\n        <div className=\"container\">\n                <Calendar\n                    events={events}\n                />\n            \n        </div>\n    )\n}\n\n\nexport default Cal;","import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    FACEBOOK_AUTH_SUCCESS,\n    FACEBOOK_AUTH_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null,\n};\n\n// This uses the initial state created above and test them against the different cases that adjusts the states. \n// and these cases happens in the different auth components.\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n        case GOOGLE_AUTH_SUCCESS:\n        case FACEBOOK_AUTH_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            localStorage.setItem('refresh', payload.refresh);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case GOOGLE_AUTH_FAIL:\n        case FACEBOOK_AUTH_FAIL:\n        case LOGIN_FAIL:\n        case SIGNUP_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n};","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React, { useState, Fragment } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\n\nconst Navi = ({ logout, isAuthenticated }) => {\n    const [redirect, setRedirect] = useState(false);\n\n    const logout_user = () => {\n        logout();\n        setRedirect(true);\n    };\n\n    const guestLinks = () => (\n        <Fragment>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/login'>Login</Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/signup'>Sign Up</Link>\n            </li>\n        </Fragment>\n    );\n\n    const authLinks = () => (\n        <Fragment>\n            <li className='nav-item'>\n                <a className='nav-link' href='#!' onClick={logout_user}>Logout</a>\n            </li>\n            <li>\n                <Link className='nav-link' to='/routes'>Routes</Link>    \n            </li>\n        </Fragment>\n    );\n\n    return (\n        <Fragment>\n            <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n                <Link className='navbar-brand' to='/'>Climb D. Jango</Link>\n                <button \n                    className='navbar-toggler' \n                    type='button' \n                    data-toggle='collapse' \n                    data-target='#navbarNav' \n                    aria-controls='navbarNav' \n                    aria-expanded='false' \n                    aria-label='Toggle navigation'\n                >\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n                <div className='collapse navbar-collapse' id='navbarNav'>\n                    <ul className='navbar-nav'>\n                        <li className='nav-item active'>\n                            <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\n                        </li>\n                        {isAuthenticated ? authLinks() : guestLinks()}\n                    </ul>\n                </div>\n            </nav>\n            {redirect ? <Redirect to='/' /> : <Fragment></Fragment>}\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { logout })(Navi);","import React, { useEffect } from 'react';\nimport Navi from '../components/Navi';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n    }, []);\n\n    return (\n            <div>\n                <Navi />\n                {children}\n            </div>\n    );\n};\n        \nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n// <footer style={{marginBottom:0}}>credits for authentication: https://github.com/linkedweb/auth_system</footer>","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './components/auth/Home';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport Activate from './components/auth/Activate';\nimport ResetPassword from './components/auth/ResetPassword';\nimport ResetPasswordConfirm from './components/auth/ResetPasswordConfirm';\nimport Facebook from './components/auth/Facebook';\nimport AllRoutes from './components/AllRoutes';\nimport Google from './components/auth/Google';\nimport Calendar from './components/Calendar';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Layout from './hocs/Layout';\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route exact path='/login' component={Login} />\n                    <Route exact path='/signup' component={Signup} />\n                    <Route exact path='/google' component={Google} />\n                    <Route exact path='/facebook' component={Facebook} />\n                    <Route exact path='/reset-password' component={ResetPassword} />\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\n                    <Route exact path='/routes' component={AllRoutes} />\n                    <Route exact path='/cal' component={Calendar} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}